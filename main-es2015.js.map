{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feedback/feedback-dialog/feedback-dialog.component.ts","./src/app/feedback/feedback-dialog/feedback-dialog.component.html","./src/app/feedback/feedback.module.ts","./src/app/feedback/feedback.service.ts","./src/app/feedback/feedback/feedback.component.ts","./src/app/feedback/feedback/feedback.component.html","./src/app/pages/demo-page/demo-page.component.ts","./src/app/pages/demo-page/demo-page.component.html","./src/app/pages/help-page/help-page.component.ts","./src/app/pages/help-page/help-page.component.html","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/services/auth.service.ts","./src/app/services/breakpoint.service.ts","./src/app/services/dialog.service.ts","./src/app/services/snack.service.ts","./src/app/shared/delete-button/delete-button.component.ts","./src/app/shared/delete-button/delete-button.component.html","./src/app/shared/shared.module.ts","./src/app/shared/shell/shell.component.ts","./src/app/shared/shell/shell.component.html","./src/app/user/email-login/email-login.component.ts","./src/app/user/email-login/email-login.component.html","./src/app/user/google-signin.directive.ts","./src/app/user/login-page/login-page.component.ts","./src/app/user/login-page/login-page.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { AuthGuard } from './user/auth.guard';\r\nimport { HelpPageComponent } from './pages/help-page/help-page.component';\r\nimport { DemoPageComponent } from './pages/demo-page/demo-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomePageComponent },\r\n  { path: 'demo', component: DemoPageComponent },\r\n  { path: 'help', component: HelpPageComponent },\r\n  // {\r\n  //   path: 'login',\r\n  //   loadChildren: () => import('./user/user.module').then(m => m.UserModule)\r\n  // },\r\n  {\r\n    path: 'tts',\r\n    loadChildren: () =>\r\n      import('./tts/tts.module').then(m => m.TtsModule),\r\n    // canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled'\r\n})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor() {}\r\n}\r\n","<app-shell>\r\n    <router-outlet></router-outlet>\r\n    <app-feedback></app-feedback>\r\n</app-shell>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// App Modules\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { UserModule } from './user/user.module';\r\n\r\n// Firebase imports\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SnackService } from './services/snack.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FeedbackModule } from './feedback/feedback.module';\r\nimport { BreakpointService } from './services/breakpoint.service';\r\nimport { DialogService } from './services/dialog.service';\r\nimport { HelpPageComponent } from './pages/help-page/help-page.component';\r\nimport { DemoPageComponent } from './pages/demo-page/demo-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomePageComponent,\r\n    HelpPageComponent,\r\n    DemoPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    UserModule,\r\n    // AngularFireModule.initializeApp(environment.firebase),\r\n    // AngularFirestoreModule,\r\n    // AngularFireAuthModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\r\n    FeedbackModule,\r\n  ],\r\n  providers: [SnackService,\r\n    AuthService,\r\n    DialogService,\r\n    BreakpointService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nexport interface Feedback {\n  goal?: string;\n  features?: string;\n  other?: string;\n  mail?: string;\n}\n\n@Component({\n  selector: 'app-feedback-dialog',\n  templateUrl: './feedback-dialog.component.html',\n  styleUrls: ['./feedback-dialog.component.scss']\n})\nexport class FeedbackDialogComponent implements OnInit {\n  formGroup: FormGroup;\n\n  constructor() {\n    this.formGroup = new FormGroup({\n      goal: new FormControl(''),\n      features: new FormControl(''),\n      other: new FormControl(''),\n      mail: new FormControl(''),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  formGroupToFeedback(formGroup: FormGroup): Feedback {\n    return {\n      goal: formGroup.get('goal').value || '',\n      features: formGroup.get('features').value || '',\n      other: formGroup.get('other').value || '',\n    }\n  }\n\n}\n","<header class=\"feedback-header\">\n  <h3>Feedback survey</h3>\n  <a class=\"close-button\" [mat-dialog-close]=\"\">X</a>\n</header>\n<div mat-dialog-content>\n  <form class=\"survey\" [formGroup]=\"formGroup\">\n    <div class=\"question-row\">\n      <label for=\"goal\">\n        What is your main goal using this service ?\n      </label>\n      <textarea id=\"goal\" matInput formControlName=\"goal\"></textarea>\n    </div>\n    <div class=\"question-row\">\n      <label for=\"features\">What features would you like to see introduced in the future ?</label>\n      <textarea id=\"features\" matInput formControlName=\"features\"></textarea>\n    </div>\n    <div class=\"question-row\">\n      <label for=\"other\">Is there anything else you would like to add ? (question, remark, issues...)</label>\n      <textarea id=\"other\" matInput formControlName=\"other\"></textarea>\n    </div>\n    <div class=\"question-row\">\n      <label for=\"mail\">You can leave your mail if you want us to get back to you.</label>\n      <input id=\"mail\" matInput formControlName=\"mail\"/>\n    </div>\n  </form>\n\n</div>\n<div mat-dialog-actions>\n\n  <button class=\"submit-survey\" mat-raised-button [mat-dialog-close]=\"formGroupToFeedback(formGroup)\">Submit</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { FeedbackDialogComponent } from './feedback-dialog/feedback-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [FeedbackComponent, FeedbackDialogComponent],\n  exports: [\n    FeedbackComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    SharedModule,\n    ReactiveFormsModule\n  ]\n})\nexport class FeedbackModule { }\n","import { Injectable } from '@angular/core';\nimport { Feedback } from './feedback-dialog/feedback-dialog.component';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  sendFeedback(result: Feedback): Observable<any> {\n    const data = {\n      files: {\n        'goal.txt': {\n          content: result.goal\n        },\n        'features.txt': {\n          content: result.features\n        },\n        'other.txt': {\n          content: result.other\n        },\n        'mail.txt': {\n          content: result.mail\n        },\n\n      },\n      description: 'feedback',\n    }\n    return this\n      .httpClient\n      .post(\n      'https://api.github.com/gists?access_token=' + environment.feedbackToken,\n        data\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Feedback, FeedbackDialogComponent } from '../feedback-dialog/feedback-dialog.component';\nimport { SnackService } from '../../services/snack.service';\nimport { FeedbackService } from '../feedback.service';\nimport { DialogService } from '../../services/dialog.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent implements OnInit {\n\n  constructor(\n    private dialogService: DialogService,\n    private feedbackService: FeedbackService,\n    private snackService: SnackService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  feedbackClicked() {\n    this.dialogService.openDialog(FeedbackDialogComponent, {\n    }).subscribe((result: Feedback) => {\n      if (result) {\n        this.feedbackService.sendFeedback(result).subscribe(() => {\n          this.snackService.displayMessage('Thank you for your feedback !');\n        }, error => {\n          console.log(error);\n          this.snackService.displayMessage('Sorry, something went wrong sending your feedback.');\n        });\n      }\n    });\n  }\n}\n","<button (click)=\"feedbackClicked()\">Feedback</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo-page',\n  templateUrl: './demo-page.component.html',\n  styleUrls: ['./demo-page.component.scss']\n})\nexport class DemoPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<article class=\"simple-article\">\n  <section class=\"simple-section\">\n    Coming soon !\n  </section>\n</article>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-page',\n  templateUrl: './help-page.component.html',\n  styleUrls: ['./help-page.component.scss']\n})\nexport class HelpPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<article class=\"simple-article\">\n  <section class=\"simple-section\">\n    <h2>How to get an API key ?</h2>\n    <ol>\n      <li>Create or select a Google Cloud project from <a href=\"https://console.cloud.google.com/cloud-resource-manager\">here</a></li>\n      <li>Enable billing for the project from <a href=\"https://console.cloud.google.com/billing/linkedaccount\">here</a>. (Note: even with billing enabled, you won't be charged unless you go over the <a href=\"https://cloud.google.com/text-to-speech/pricing\">free monthly quota</a>)</li>\n      <li>Enable Text-to-Speech <a href=\"https://console.cloud.google.com/flows/enableapi?apiid=texttospeech.googleapis.com\">here</a>.</li>\n      <li>Go to the <a href=\"https://console.cloud.google.com/apis/credentials\">Credentials page</a>, click on <b>Create credentials</b>, then <b>API key</b>.</li>\n      <li>Copy and paste the API Key into the <a [routerLink]=\"'/tts'\"> Text-to-Speech Interface</a> and click save.</li> (Note: the API key is saved in your browser, we do not save it on our end)\n    </ol>\n    <h2>\n      Pricing\n    </h2>\n    <p>\n      This website is currently free.\n      You won't be charged by Google Cloud's Text-to-Speech as long as you don't go over the free quota.\n      Google's service offers 1 million characters per month free of charge (<a href=\"https://cloud.google.com/text-to-speech/pricing\">see details here</a>)\n      After that, the pricing is $16.00USD per 1 million characters for WaveNet TTS, and $4.00US for non-WaveNet TTS.\n    </p>\n\n    <h2>\n      Privacy\n    </h2>\n    <p>\n      Nothing is stored on our end, except for the feedback you might send us.\n      Everything else (API key, generated sounds, text) is stored within your device's browser.\n    </p>\n  </section>\n</article>\n\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent {}\r\n","\r\n<header>\r\n    <h1>Text2Speech AI</h1>\r\n    <p>\r\n        Access state-of-the-art Text-To-Speech synthesis through an easy-to-use interface !\r\n    </p>\r\n</header>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n\n  public user: any;\n  private _loaded = new BehaviorSubject<boolean>(false); // Initial load\n\n  waitForLoad(): Promise<boolean> {\n    return this._loaded.pipe(\n      filter(val => val),\n      take(1),\n    ).toPromise();\n  }\n\n  constructor(private af: AngularFireAuth) {\n    this.af.user.subscribe(user => {\n      if (user) {\n        this.setUser(user)\n      }\n      this._loaded.next(true);\n    })\n  }\n  setUser(user) { this.user = user; }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreakpointService {\n  isExtraSmall: Observable<BreakpointState> = this.breakpointObserver.observe(\n    Breakpoints.XSmall\n  );\n\n  get isMobile() {\n    return this.breakpointObserver.isMatched('(max-width: 767px)');\n  }\n\n  constructor(private readonly breakpointObserver: BreakpointObserver) { }\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {ComponentType} from '@angular/cdk/overlay';\nimport {Observable} from 'rxjs';\nimport { BreakpointService } from './breakpoint.service';\n\n@Injectable()\nexport class DialogService {\n  isOpened = false;\n\n  constructor(\n    private readonly breakpointService: BreakpointService,\n    public dialog: MatDialog,\n  ) { }\n\n\n  openDialog(component: ComponentType<any> | TemplateRef<any>, config?: MatDialogConfig): Observable<any> {\n    if (this.isOpened) {\n      return;\n    }\n    this.isOpened = true;\n\n    let dialogConfig: MatDialogConfig = {\n      width: 'calc(100% - 50px)',\n      maxWidth: '100vw',\n      panelClass: 'no-border-radius',\n    }\n    if (config) {\n      dialogConfig = {\n        ...dialogConfig,\n        ...config,\n      };\n    }\n    const d = this.dialog.open(component, dialogConfig);\n\n    const smallDialogSubscription = this.breakpointService.isExtraSmall.subscribe(size => {\n      if (size.matches) {\n        d.updateSize('100vw', '100vh');\n      } else {\n        d.updateSize('calc(100% - 50px)', '');\n      }\n    });\n\n    const afterClosed = d.afterClosed();\n    afterClosed.subscribe(() => {\n      this.isOpened = false;\n      smallDialogSubscription.unsubscribe();\n    });\n    return afterClosed;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackService {\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private router: Router\r\n  ) {}\r\n\r\n  authError() {\r\n    this.snackBar.open('You must be logged in!', 'OK', {\r\n      duration: 5000\r\n    });\r\n\r\n    return this.snackBar._openedSnackBarRef\r\n      .onAction()\r\n      .pipe(tap(_ => this.router.navigate(['/login'])))\r\n      .subscribe();\r\n  }\r\n\r\n  public displayError(message: string) {\r\n    this.snackBar.open(message, 'OK', {\r\n      panelClass: 'error-bar',\r\n      duration: 5000\r\n    });\r\n  }\r\n\r\n  public displayMessage(message: string, options?: any) {\r\n    this.snackBar.open(message, 'OK', {\r\n      duration: (options && options.duration) || 5000\r\n    });\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-button',\r\n  templateUrl: './delete-button.component.html',\r\n  styleUrls: ['./delete-button.component.scss']\r\n})\r\nexport class DeleteButtonComponent {\r\n  canDelete: boolean;\r\n\r\n  @Output() delete = new EventEmitter<boolean>();\r\n\r\n  cancel() {\r\n    this.canDelete = false;\r\n  }\r\n\r\n  prepareForDelete() {\r\n    this.canDelete = true;\r\n  }\r\n\r\n  deleteBoard() {\r\n    this.delete.emit(true);\r\n    this.canDelete = false;\r\n  }\r\n\r\n\r\n}\r\n","<button mat-button color=\"warn\" (click)=\"canDelete ? deleteBoard() : prepareForDelete()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span *ngIf=\"canDelete\">confirm</span> \r\n</button>\r\n\r\n<button *ngIf=\"canDelete\" mat-button (click)=\"cancel()\">\r\n    Cancel\r\n</button>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ShellComponent } from './shell/shell.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DeleteButtonComponent } from './delete-button/delete-button.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nconst components = [\r\n  ShellComponent, DeleteButtonComponent\r\n];\r\n\r\nconst modules = [\r\n  CommonModule,\r\n  RouterModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  LayoutModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSnackBarModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...components\r\n  ],\r\n  imports: [\r\n    ...modules,\r\n  ],\r\n  exports: [\r\n    ...components,\r\n    ...modules\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n  selector: 'app-shell',\r\n  templateUrl: './shell.component.html',\r\n  styleUrls: ['./shell.component.scss']\r\n})\r\nexport class ShellComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe([Breakpoints.XSmall])\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    // public afAuth: AngularFireAuth\r\n  ) {}\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"false\">\r\n    <mat-toolbar>Menu</mat-toolbar>\r\n    <mat-nav-list>\r\n\r\n      <a mat-list-item routerLink=\"/\" (click)=\"drawer.close()\">Home</a>\r\n<!--      <a mat-list-item routerLink=\"/login\" (click)=\"drawer.close()\">Login</a>-->\r\n      <a mat-list-item routerLink=\"/demo\" (click)=\"drawer.close()\">Demo</a>\r\n      <a mat-list-item routerLink=\"/help\" (click)=\"drawer.close()\">Help</a>\r\n      <a mat-list-item routerLink=\"/tts\" (click)=\"drawer.close()\">TTS interface</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n\r\n\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span class=\"logo\" routerLink=\"/\">💬 Text2Speech AI</span>\r\n\r\n      <span class=\"fill-space\"></span>\r\n      <div *ngIf=\"!(isHandset$ | async)\">\r\n        <a mat-button routerLink=\"/demo\">🔊 Demo</a>\r\n        <a mat-button routerLink=\"/tts\">📃 Text-to-Speech Interface</a>\r\n        <a mat-button routerLink=\"/help\">❔ Help</a>\r\n\r\n<!--        <a mat-button routerLink=\"/login\" *ngIf=\"!(afAuth.authState | async)\">🔑 Login</a>-->\r\n<!--        <a mat-button routerLink=\"/login\" *ngIf=\"afAuth.authState | async as user\" >-->\r\n<!--          ⚙ Account-->\r\n<!--        </a>-->\r\n\r\n      </div>\r\n\r\n<!--      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">-->\r\n<!--        <mat-icon>more_vert</mat-icon>-->\r\n<!--      </button>-->\r\n\r\n<!--      <mat-menu #menu=\"matMenu\">-->\r\n<!--        <a mat-menu-item href=\"https://fireship.page.link/slack\">-->\r\n<!--          <i>💬</i>-->\r\n<!--          <span>Chat on Slack</span>-->\r\n<!--        </a>-->\r\n<!--        <a mat-menu-item href=\"https://github.com/codediodeio/angular-firestarter\">-->\r\n<!--          <i>💾</i>-->\r\n<!--          <span>Code on Github</span>-->\r\n<!--        </a>-->\r\n<!--        <a mat-menu-item href=\"https://fireship.io/courses/angular\">-->\r\n<!--          <i>🔥</i>-->\r\n<!--          <span>Full Course on Fireship</span>-->\r\n<!--        </a>-->\r\n\r\n<!--        <a mat-menu-item href=\"https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA\">-->\r\n<!--          <i>📺</i>-->\r\n<!--          <span>Watch on the YouTube</span>-->\r\n<!--        </a>-->\r\n<!--      </mat-menu>-->\r\n    </mat-toolbar>\r\n\r\n    <ng-content></ng-content>\r\n\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n  selector: 'app-email-login',\r\n  templateUrl: './email-login.component.html',\r\n  styleUrls: ['./email-login.component.scss']\r\n})\r\nexport class EmailLoginComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  type: 'login' | 'signup' | 'reset' = 'signup';\r\n  loading = false;\r\n\r\n  serverMessage: string;\r\n\r\n  constructor(private afAuth: AngularFireAuth, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: [\r\n        '',\r\n        [Validators.minLength(6), Validators.required]\r\n      ],\r\n      passwordConfirm: ['', []]\r\n    });\r\n  }\r\n\r\n  changeType(val) {\r\n    this.type = val;\r\n  }\r\n\r\n  get isLogin() {\r\n    return this.type === 'login';\r\n  }\r\n\r\n  get isSignup() {\r\n    return this.type === 'signup';\r\n  }\r\n\r\n  get isPasswordReset() {\r\n    return this.type === 'reset';\r\n  }\r\n\r\n  get email() {\r\n    return this.form.get('email');\r\n  }\r\n  get password() {\r\n    return this.form.get('password');\r\n  }\r\n\r\n  get passwordConfirm() {\r\n    return this.form.get('passwordConfirm');\r\n  }\r\n\r\n  get passwordDoesMatch() {\r\n    if (this.type !== 'signup') {\r\n      return true;\r\n    } else {\r\n      return this.password.value === this.passwordConfirm.value;\r\n    }\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.loading = true;\r\n\r\n    const email = this.email.value;\r\n    const password = this.password.value;\r\n\r\n    try {\r\n      if (this.isLogin) {\r\n        await this.afAuth.auth.signInWithEmailAndPassword(email, password);\r\n      }\r\n      if (this.isSignup) {\r\n        await this.afAuth.auth.createUserWithEmailAndPassword(email, password);\r\n      }\r\n      if (this.isPasswordReset) {\r\n        await this.afAuth.auth.sendPasswordResetEmail(email);\r\n        this.serverMessage = 'Check your email';\r\n      }\r\n    } catch (err) {\r\n      this.serverMessage = err;\r\n    }\r\n\r\n    this.loading = false;\r\n  }\r\n}\r\n","<mat-card>\r\n  <div *ngIf=\"isSignup\">\r\n    <h3>Create Account</h3>\r\n\r\n    <button mat-stroked-button (click)=\"changeType('login')\">\r\n      Returning user?\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"isLogin\">\r\n    <h3>Sign In</h3>\r\n    <button size=\"small\" mat-stroked-button (click)=\"changeType('signup')\">\r\n      New user?\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"isPasswordReset\">\r\n    <h3>Reset Password</h3>\r\n    <button size=\"small\" mat-button (click)=\"changeType('login')\">Back</button>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-form-field [color]=\"email.valid && 'accent'\">\r\n      <input\r\n        matInput\r\n        formControlName=\"email\"\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        autocomplete=\"off\"\r\n      />\r\n\r\n      <mat-error *ngIf=\"email.invalid && email.dirty\">\r\n        You must enter a valid email address\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [color]=\"email.valid && 'accent'\" *ngIf=\"!isPasswordReset\">\r\n      <input\r\n        matInput\r\n        formControlName=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        autocomplete=\"off\"\r\n      />\r\n\r\n      <mat-error *ngIf=\"password.invalid && password.dirty\">\r\n        Password must be at least 6 characters long\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      [color]=\"passwordDoesMatch ? 'accent' : 'warn'\"\r\n      *ngIf=\"isSignup\"\r\n    >\r\n      <input\r\n        matInput\r\n        formControlName=\"passwordConfirm\"\r\n        type=\"password\"\r\n        placeholder=\"Confirm password\"\r\n        autocomplete=\"off\"\r\n      />\r\n\r\n      <mat-error *ngIf=\"passwordConfirm.dirty && !passwordDoesMatch\">\r\n        Password does not match\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-error class=\"server-error\">{{ serverMessage }}</mat-error>\r\n\r\n    <button\r\n      *ngIf=\"isPasswordReset\"\r\n      mat-stroked-button\r\n      type=\"submit\"\r\n      [disabled]=\"loading\"\r\n    >\r\n      Send Reset Email\r\n    </button>\r\n\r\n    <button\r\n      *ngIf=\"!isPasswordReset\"\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      type=\"submit\"\r\n      [disabled]=\"form.invalid || !passwordDoesMatch || loading\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </form>\r\n\r\n  <button\r\n    mat-button\r\n    *ngIf=\"isLogin && !isPasswordReset\"\r\n    (click)=\"changeType('reset')\"\r\n  >\r\n    Forgot password?\r\n  </button>\r\n</mat-card>\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Directive({\r\n  selector: '[appGoogleSignin]'\r\n})\r\nexport class GoogleSigninDirective {\r\n  constructor(private afAuth: AngularFireAuth) {}\r\n\r\n  @HostListener('click')\r\n  onclick() {\r\n    this.afAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent {\r\n  constructor(public afAuth: AngularFireAuth) { }\r\n}\r\n","<main>\r\n  <div *ngIf=\"!(afAuth.authState | async)\">\r\n    <h1>Login</h1>\r\n\r\n    <button mat-raised-button appGoogleSignin>\r\n      <img src=\"/assets/google-logo.svg\" /> Login with Google\r\n    </button>\r\n\r\n    <h5>OR</h5>\r\n\r\n    <app-email-login></app-email-login>\r\n  </div>\r\n\r\n  <div *ngIf=\"afAuth.authState | async as user\" class=\"logout\">\r\n    <p>\r\n      Logged in as <strong>{{ user.email }}</strong>\r\n    </p>\r\n\r\n    <button mat-stroked-button (click)=\"afAuth.auth.signOut()\">Logout</button>\r\n  </div>\r\n</main>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPageComponent } from '../user/login-page/login-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { GoogleSigninDirective } from './google-signin.directive';\r\nimport { EmailLoginComponent } from './email-login/email-login.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GoogleSigninDirective, EmailLoginComponent, LoginPageComponent],\r\n  exports: [GoogleSigninDirective],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    UserRoutingModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  feedbackToken: '123456',\r\n  firebase:  {\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n"],"sourceRoot":"webpack:///"}