{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/feedback/feedback-dialog/feedback-dialog.component.ts","webpack:///src/app/feedback/feedback-dialog/feedback-dialog.component.html","webpack:///src/app/feedback/feedback.module.ts","webpack:///src/app/feedback/feedback.service.ts","webpack:///src/app/feedback/feedback/feedback.component.ts","webpack:///src/app/feedback/feedback/feedback.component.html","webpack:///src/app/pages/demo-page/demo-page.component.ts","webpack:///src/app/pages/demo-page/demo-page.component.html","webpack:///src/app/pages/help-page/help-page.component.ts","webpack:///src/app/pages/help-page/help-page.component.html","webpack:///src/app/pages/home-page/home-page.component.ts","webpack:///src/app/pages/home-page/home-page.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/breakpoint.service.ts","webpack:///src/app/services/dialog.service.ts","webpack:///src/app/services/snack.service.ts","webpack:///src/app/shared/delete-button/delete-button.component.ts","webpack:///src/app/shared/delete-button/delete-button.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/shell/shell.component.ts","webpack:///src/app/shared/shell/shell.component.html","webpack:///src/app/user/email-login/email-login.component.html","webpack:///src/app/user/email-login/email-login.component.ts","webpack:///src/app/user/google-signin.directive.ts","webpack:///src/app/user/login-page/login-page.component.ts","webpack:///src/app/user/login-page/login-page.component.html","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","TtsModule","AppRoutingModule","forRoot","initialNavigation","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","FeedbackDialogComponent","formGroup","goal","features","other","mail","get","value","FeedbackModule","FeedbackService","httpClient","result","data","files","content","description","post","feedbackToken","providedIn","FeedbackComponent","dialogService","feedbackService","snackService","openDialog","subscribe","sendFeedback","displayMessage","error","console","log","feedbackClicked","DemoPageComponent","HelpPageComponent","HomePageComponent","AuthService","af","_loaded","user","setUser","next","pipe","val","toPromise","BreakpointService","breakpointObserver","isExtraSmall","observe","XSmall","isMatched","DialogService","breakpointService","dialog","isOpened","config","dialogConfig","width","maxWidth","panelClass","d","open","smallDialogSubscription","size","matches","updateSize","afterClosed","unsubscribe","SnackService","snackBar","router","duration","_openedSnackBarRef","onAction","_","navigate","message","options","DeleteButtonComponent","delete","canDelete","emit","deleteBoard","prepareForDelete","components","modules","SharedModule","ShellComponent","isHandset$","EmailLoginComponent","afAuth","fb","type","loading","form","group","email","required","password","minLength","passwordConfirm","isLogin","auth","signInWithEmailAndPassword","isSignup","createUserWithEmailAndPassword","isPasswordReset","sendPasswordResetEmail","serverMessage","onSubmit","GoogleSigninDirective","signInWithPopup","GoogleAuthProvider","LoginPageComponent","UserRoutingModule","forChild","UserModule","environment","firebase","document","addEventListener","bootstrapModule","catch","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAFqB,EAGrB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,EAIrB;AACA;AACA;AACA;AACA;AACED,UAAI,EAAE,KADR;AAEEE,kBAAY,EAAE;AAAA,eACZ;AAAA;AAAA;AAAA;AAAA,wCAA2BX,IAA3B,CAAgC,UAAAY,CAAC;AAAA,iBAAIA,CAAC,CAACC,SAAN;AAAA,SAAjC,CADY;AAAA;AAFhB,KARqB,CAAvB;;QAsBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBALlB,CAAC,6DAAaC,OAAb,CAAqBP,MAArB,EAA6B;AACrCQ,yBAAiB,EAAE;AADkB,OAA7B,CAAD,CAKkB,EAFjB,4DAEiB;;;;0HAAhBF,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAN5B,sDAM4B;eANnB;AACRG,iBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqBP,MAArB,EAA6B;AACrCQ,6BAAiB,EAAE;AADkB,WAA7B,CAAD,CADD;AAIRV,iBAAO,EAAE,CAAC,4DAAD;AAJD,S;AAMmB,Q;;;;;;;;;;;;;;;;;;AC7B7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaY,Y,GACX,wBAAc;AAAA;AAAE,K;;;uBADLA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AACI;;AACA;;AACJ;;;;;;;;;sEDIaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,wD,CAKA;;;QAgDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBANT,CAAC,qEAAD,EACT,mEADS,EAET,uEAFS,EAGT,+EAHS,C;AAGS,gBAhBX,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,sEAJO,EAKP,kEALO,EAMP,4DANO,EAOP;AACA;AACA;AACA,kFAAoBC,QAApB,CAA6B,gBAA7B,EAA+C;AAACC,eAAO,EAAE,sEAAYC;AAAtB,OAA/C,CAVO,EAWP,yEAXO,CAgBW;;;;0HAGTH,S,EAAS;AAAA,uBAxBlB,2DAwBkB,EAvBlB,sFAuBkB,EAtBlB,uFAsBkB,EArBlB,uFAqBkB;AArBD,kBAGjB,uEAHiB,EAIjB,oEAJiB,EAKjB,4FALiB,EAMjB,sEANiB,EAOjB,kEAPiB,EAQjB,4DARiB,EAQP,2EARO,EAajB,yEAbiB;AAqBC,O;AARJ,K;;;;;sEAQLA,S,EAAS;cA1BrB,sDA0BqB;eA1BZ;AACRI,sBAAY,EAAE,CACZ,2DADY,EAEZ,sFAFY,EAGZ,uFAHY,EAIZ,uFAJY,CADN;AAORT,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,sEAJO,EAKP,kEALO,EAMP,4DANO,EAOP;AACA;AACA;AACA,sFAAoBM,QAApB,CAA6B,gBAA7B,EAA+C;AAACC,mBAAO,EAAE,sEAAYC;AAAtB,WAA/C,CAVO,EAWP,yEAXO,CAPD;AAoBRE,mBAAS,EAAE,CAAC,qEAAD,EACT,mEADS,EAET,uEAFS,EAGT,+EAHS,CApBH;AAwBRC,mBAAS,EAAE,CAAC,2DAAD;AAxBH,S;AA0BY,Q;;;;;;;;;;;;;;;;;;ACrDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeaC,uB;;;AAGX,yCAAc;AAAA;;AACZ,aAAKC,SAAL,GAAiB,IAAI,wDAAJ,CAAc;AAC7BC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CADuB;AAE7BC,kBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAFmB;AAG7BC,eAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAHsB;AAI7BC,cAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAJuB,SAAd,CAAjB;AAMD;;;;mCAEO,CACP;;;4CAEmBJ,S,EAAoB;AACtC,iBAAO;AACLC,gBAAI,EAAED,SAAS,CAACK,GAAV,CAAc,MAAd,EAAsBC,KAAtB,IAA+B,EADhC;AAELJ,oBAAQ,EAAEF,SAAS,CAACK,GAAV,CAAc,UAAd,EAA0BC,KAA1B,IAAmC,EAFxC;AAGLH,iBAAK,EAAEH,SAAS,CAACK,GAAV,CAAc,OAAd,EAAuBC,KAAvB,IAAgC;AAHlC,WAAP;AAKD;;;;;;;uBArBUP,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,mkB;AAAA;AAAA;ACfpC;;AACE;;AAAI;;AAAe;;AACnB;;AAA8C;;AAAC;;AACjD;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACF;;AACA;;AACE;;AAAsB;;AAA8D;;AACpF;;AACF;;AACA;;AACE;;AAAmB;;AAA4E;;AAC/F;;AACF;;AACA;;AACE;;AAAkB;;AAA0D;;AAC5E;;AACF;;AACF;;AAEF;;AACA;;AAEE;;AAAoG;;AAAM;;AAC5G;;;;AAzBuB;;AAAA;;AAwB2B;;AAAA;;;;;;;;;sEDdrCA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTV,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;AEfpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAsBagB,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAPhB,CACP,4DADO,EAEP,wEAFO,EAGP,kEAHO,EAIP,kEAJO,CAOgB;;;;0HAAdA,c,EAAc;AAAA,uBAXV,8EAWU,EAXS,kGAWT;AAXgC,kBAKvD,4DALuD,EAMvD,wEANuD,EAOvD,kEAPuD,EAQvD,kEARuD,CAWhC;AAHJ,kBANnB,8EAMmB;AAGI,O;AATN,K;;;;;sEASRA,c,EAAc;cAZ1B,sDAY0B;eAZjB;AACRX,sBAAY,EAAE,CAAC,8EAAD,EAAoB,kGAApB,CADN;AAERpB,iBAAO,EAAE,CACP,8EADO,CAFD;AAKRW,iBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,kEAHO,EAIP,kEAJO;AALD,S;AAYiB,Q;;;;;;;;;;;;;;;;;;ACtB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaqB,e;;;AAEX,+BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAA2B;;;;qCAElCC,M,EAAgB;AAC3B,cAAMC,IAAI,GAAG;AACXC,iBAAK,EAAE;AACL,0BAAY;AACVC,uBAAO,EAAEH,MAAM,CAACT;AADN,eADP;AAIL,8BAAgB;AACdY,uBAAO,EAAEH,MAAM,CAACR;AADF,eAJX;AAOL,2BAAa;AACXW,uBAAO,EAAEH,MAAM,CAACP;AADL,eAPR;AAUL,0BAAY;AACVU,uBAAO,EAAEH,MAAM,CAACN;AADN;AAVP,aADI;AAgBXU,uBAAW,EAAE;AAhBF,WAAb;AAkBA,iBAAO,KACJL,UADI,CAEJM,IAFI,CAGL,+CAA+C,sEAAYC,aAHtD,EAIHL,IAJG,CAAP;AAMD;;;;;;;uBA7BUH,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVS,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACT5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,iB;;;AAEX,iCACUC,aADV,EAEUC,eAFV,EAGUC,YAHV,EAGoC;AAAA;;AAF1B,aAAAF,aAAA,GAAAA,aAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACL;;;;mCAEG,CACP;;;0CAEiB;AAAA;;AAChB,eAAKF,aAAL,CAAmBG,UAAnB,CAA8B,kGAA9B,EAAuD,EAAvD,EACGC,SADH,CACa,UAACb,MAAD,EAAsB;AACjC,gBAAIA,MAAJ,EAAY;AACV,mBAAI,CAACU,eAAL,CAAqBI,YAArB,CAAkCd,MAAlC,EAA0Ca,SAA1C,CAAoD,YAAM;AACxD,qBAAI,CAACF,YAAL,CAAkBI,cAAlB,CAAiC,+BAAjC;AACD,eAFD,EAEG,UAAAC,KAAK,EAAI;AACVC,uBAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,qBAAI,CAACL,YAAL,CAAkBI,cAAlB,CAAiC,oDAAjC;AACD,eALD;AAMD;AACF,WAVD;AAWD;;;;;;;uBAvBUP,iB,EAAiB,uI,EAAA,kI,EAAA,qI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,c;AAAA,a;AAAA,4B;AAAA;AAAA;ACX9B;;AAAQ;AAAA,mBAAS,IAAAW,eAAA,EAAT;AAA0B,WAA1B;;AAA4B;;AAAQ;;;;;;;;sEDW/BX,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT7B,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauC,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,4D;AAAA;AAAA;ACP9B;;AACE;;AACE;;AACF;;AACF;;;;;;;;sEDGaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTzC,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawC,iB;;;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,ob;AAAA;AAAA;ACP9B;;AACE;;AACE;;AAAI;;AAAuB;;AAC3B;;AACE;;AAAI;;AAA6C;;AAAkE;;AAAI;;AAAI;;AAC3H;;AAAI;;AAAoC;;AAAiE;;AAAI;;AAAI;;AAAgF;;AAA0D;;AAAkB;;AAAI;;AAAC;;AAClR;;AAAI;;AAAsB;;AAA6F;;AAAI;;AAAI;;AAAC;;AAChI;;AAAI;;AAAU;;AAA4D;;AAAgB;;AAAI;;AAAW;;AAAG;;AAAkB;;AAAI;;AAAO;;AAAG;;AAAO;;AAAI;;AAAC;;AACxJ;;AAAI;;AAAoC;;AAA0B;;AAAwB;;AAAK;;AAAe;;AAAM;;AACtH;;AACA;;AACE;;AACF;;AACA;;AACE;;AAEuE;;AAA0D;;AAAgB;;AAAI;;AAEvJ;;AAEA;;AACE;;AACF;;AACA;;AACE;;AAEF;;AACF;;AACF;;;;AApBiD;;AAAA;;;;;;;;;sEDDpCA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT1C,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayC,iB;;;;;uBAAAA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACN9B;;AACI;;AAAI;;AAAc;;AAClB;;AACI;;AACJ;;AACJ;;;;;;;;sEDCaA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT3C,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa0C,W;;;AAYX,2BAAoBC,EAApB,EAAyC;AAAA;;AAAA;;AAArB,aAAAA,EAAA,GAAAA,EAAA;AATZ,aAAAC,OAAA,GAAU,IAAI,oDAAJ,CAA6B,KAA7B,CAAV,CASiC,CATc;;AAUrD,aAAKD,EAAL,CAAQE,IAAR,CAAab,SAAb,CAAuB,UAAAa,IAAI,EAAI;AAC7B,cAAIA,IAAJ,EAAU;AACR,kBAAI,CAACC,OAAL,CAAaD,IAAb;AACD;;AACD,gBAAI,CAACD,OAAL,CAAaG,IAAb,CAAkB,IAAlB;AACD,SALD;AAMD;;;;sCAdU;AACT,iBAAO,KAAKH,OAAL,CAAaI,IAAb,CACL,8DAAO,UAAAC,GAAG;AAAA,mBAAIA,GAAJ;AAAA,WAAV,CADK,EAEL,4DAAK,CAAL,CAFK,EAGLC,SAHK,EAAP;AAID;;;gCAUOL,I,EAAM;AAAE,eAAKA,IAAL,GAAYA,IAAZ;AAAmB;;;;;;;uBApBxBH,W,EAAW,0H;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW;;;;;sEAAXA,W,EAAW;cADvB;AACuB,Q;;;;;;;;;;;;;;;;;;;;;;ACNxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaS,iB;;;AASX,iCAA6BC,kBAA7B,EAAqE;AAAA;;AAAxC,aAAAA,kBAAA,GAAAA,kBAAA;AAR7B,aAAAC,YAAA,GAA4C,KAAKD,kBAAL,CAAwBE,OAAxB,CAC1C,gEAAYC,MAD8B,CAA5C;AAQwE;;;;4BAJzD;AACb,iBAAO,KAAKH,kBAAL,CAAwBI,SAAxB,CAAkC,oBAAlC,CAAP;AACD;;;;;;;uBAPUL,iB,EAAiB,8H;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVzB,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa+B,a;;;AAGX,6BACmBC,iBADnB,EAESC,MAFT,EAE0B;AAAA;;AADP,aAAAD,iBAAA,GAAAA,iBAAA;AACV,aAAAC,MAAA,GAAAA,MAAA;AAJT,aAAAC,QAAA,GAAW,KAAX;AAKK;;;;mCAGMvE,S,EAAkDwE,M,EAAwB;AAAA;;AACnF,cAAI,KAAKD,QAAT,EAAmB;AACjB;AACD;;AACD,eAAKA,QAAL,GAAgB,IAAhB;AAEA,cAAIE,YAAY,GAAoB;AAClCC,iBAAK,EAAE,mBAD2B;AAElCC,oBAAQ,EAAE,OAFwB;AAGlCC,sBAAU,EAAE;AAHsB,WAApC;;AAKA,cAAIJ,MAAJ,EAAY;AACVC,wBAAY,GAAG,MAAH,OAAG,CAAH,kBACPA,YADO,CAAG,EAEVD,MAFU,CAAf;AAID;;AACD,cAAMK,CAAC,GAAG,KAAKP,MAAL,CAAYQ,IAAZ,CAAiB9E,SAAjB,EAA4ByE,YAA5B,CAAV;AAEA,cAAMM,uBAAuB,GAAG,KAAKV,iBAAL,CAAuBL,YAAvB,CAAoCrB,SAApC,CAA8C,UAAAqC,IAAI,EAAI;AACpF,gBAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBJ,eAAC,CAACK,UAAF,CAAa,OAAb,EAAsB,OAAtB;AACD,aAFD,MAEO;AACLL,eAAC,CAACK,UAAF,CAAa,mBAAb,EAAkC,EAAlC;AACD;AACF,WAN+B,CAAhC;AAQA,cAAMC,WAAW,GAAGN,CAAC,CAACM,WAAF,EAApB;AACAA,qBAAW,CAACxC,SAAZ,CAAsB,YAAM;AAC1B,kBAAI,CAAC4B,QAAL,GAAgB,KAAhB;AACAQ,mCAAuB,CAACK,WAAxB;AACD,WAHD;AAIA,iBAAOD,WAAP;AACD;;;;;;;uBA1CUf,a,EAAa,6H,EAAA,0H;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiB,Y;;;AACX,4BACUC,QADV,EAEUC,MAFV,EAEwB;AAAA;;AADd,aAAAD,QAAA,GAAAA,QAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACN;;;;oCAEQ;AAAA;;AACV,eAAKD,QAAL,CAAcR,IAAd,CAAmB,wBAAnB,EAA6C,IAA7C,EAAmD;AACjDU,oBAAQ,EAAE;AADuC,WAAnD;AAIA,iBAAO,KAAKF,QAAL,CAAcG,kBAAd,CACJC,QADI,GAEJ/B,IAFI,CAEC,2DAAI,UAAAgC,CAAC;AAAA,mBAAI,MAAI,CAACJ,MAAL,CAAYK,QAAZ,CAAqB,CAAC,QAAD,CAArB,CAAJ;AAAA,WAAL,CAFD,EAGJjD,SAHI,EAAP;AAID;;;qCAEmBkD,O,EAAiB;AACnC,eAAKP,QAAL,CAAcR,IAAd,CAAmBe,OAAnB,EAA4B,IAA5B,EAAkC;AAChCjB,sBAAU,EAAE,WADoB;AAEhCY,oBAAQ,EAAE;AAFsB,WAAlC;AAID;;;uCAEqBK,O,EAAiBC,O,EAAe;AACpD,eAAKR,QAAL,CAAcR,IAAd,CAAmBe,OAAnB,EAA4B,IAA5B,EAAkC;AAChCL,oBAAQ,EAAGM,OAAO,IAAIA,OAAO,CAACN,QAApB,IAAiC;AADX,WAAlC;AAGD;;;;;;;uBA5BUH,Y,EAAY,+H,EAAA,8G;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVhD,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;;;ACRzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AAAwB;;AAAO;;;;;;;;AAGnC;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AACJ;;;;QDAa0D,qB;;;AALb;AAAA;;AAQY,aAAAC,MAAA,GAAS,IAAI,0DAAJ,EAAT;AAgBX;;;;iCAdU;AACP,eAAKC,SAAL,GAAiB,KAAjB;AACD;;;2CAEkB;AACjB,eAAKA,SAAL,GAAiB,IAAjB;AACD;;;sCAEa;AACZ,eAAKD,MAAL,CAAYE,IAAZ,CAAiB,IAAjB;AACA,eAAKD,SAAL,GAAiB,KAAjB;AACD;;;;;;;uBAhBUF,qB;AAAqB,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,uJ;AAAA;AAAA;ACPlC;;AAAgC;AAAA,mCAAqB,IAAAI,WAAA,EAArB,GAAqC,IAAAC,gBAAA,EAArC;AAAuD,WAAvD;;AAC5B;;AAAU;;AAAM;;AAChB;;AACJ;;AAEA;;;;AAHU;;AAAA;;AAGF;;AAAA;;;;;;;;;sEDEKL,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTtF,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;gBAG/B;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,QAAM0F,UAAU,GAAG,CACjB,qEADiB,EACD,6FADC,CAAnB;AAIA,QAAMC,OAAO,GAAG,CACd,4DADc,EAEd,6DAFc,EAGd,0EAHc,EAId,oEAJc,EAKd,gEALc,EAMd,wEANc,EAOd,0EAPc,EAQd,oEARc,EASd,oEATc,EAUd,oEAVc,EAWd,qEAXc,EAYd,gFAZc,EAad,uEAbc,EAcd,8EAdc,CAAhB;;QA6BaC,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,0BAPlBD,OAOkB,GA5BvB,4DA4BuB,EA3BvB,6DA2BuB,EA1BvB,0EA0BuB,EAzBvB,oEAyBuB,EAxBvB,gEAwBuB,EAvBvB,wEAuBuB,EAtBvB,0EAsBuB,EArBvB,oEAqBuB,EApBvB,oEAoBuB,EAnBvB,oEAmBuB,EAlBvB,qEAkBuB,EAjBvB,gFAiBuB,EAhBvB,uEAgBuB,EAfvB,8EAeuB;;;;0HAAZC,Y,EAAY;AAAA,uBAhCvB,qEAgCuB,EAhCP,6FAgCO;AAhCc,kBAIrC,4DAJqC,EAKrC,6DALqC,EAMrC,0EANqC,EAOrC,oEAPqC,EAQrC,gEARqC,EASrC,wEATqC,EAUrC,0EAVqC,EAWrC,oEAXqC,EAYrC,oEAZqC,EAarC,oEAbqC,EAcrC,qEAdqC,EAerC,gFAfqC,EAgBrC,uEAhBqC,EAiBrC,8EAjBqC,CAgCd;AAfN,kBAjBjB,qEAiBiB,EAjBD,6FAiBC,EAbjB,4DAaiB,EAZjB,6DAYiB,EAXjB,0EAWiB,EAVjB,oEAUiB,EATjB,gEASiB,EARjB,wEAQiB,EAPjB,0EAOiB,EANjB,oEAMiB,EALjB,oEAKiB,EAJjB,oEAIiB,EAHjB,qEAGiB,EAFjB,gFAEiB,EADjB,uEACiB,EAAjB,8EAAiB;AAeM,O;AAfN,K;;;;;sEAeNA,Y,EAAY;cAZxB,sDAYwB;eAZf;AACRvF,sBAAY,YACPqF,UADO,CADJ;AAIR9F,iBAAO,YACF+F,OADE,CAJC;AAOR1G,iBAAO,YACFyG,UADE,EAEFC,OAFE;AAPC,S;AAYe,Q;;;;;;;;;;;;;;;;;;AClDzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiBM;;AAIE;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,YAAT;AAAwB,SAAxB;;AAIA;;AAA4C;;AAAI;;AAClD;;;;;;AAIA;;AACE;;AAAiC;;AAAO;;AACxC;;AAAgC;;AAA2B;;AAC3D;;AAAiC;;AAAM;;AAOzC;;;;;;QD7BOE,c,GAQX,wBACUzC,kBADV,EACgD;AAAA;;AAAtC,WAAAA,kBAAA,GAAAA,kBAAA;AAPV,WAAA0C,UAAA,GAAkC,KAAK1C,kBAAL,CAAwBE,OAAxB,CAAgC,CAAC,gEAAYC,MAAb,CAAhC,EAC/BP,IAD+B,CAE9B,2DAAI,UAAA7B,MAAM;AAAA,eAAIA,MAAM,CAACmD,OAAX;AAAA,OAAV,CAF8B,EAG9B,oEAH8B,CAAlC;AASI,K;;;uBAXOuB,c,EAAc,uI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,6B;AAAA,e;AAAA,c;AAAA,wvB;AAAA;AAAA;;;;;ACX3B;;AACE;;;;;;AAIE;;AAAa;;AAAI;;AACjB;;AAEE;;AAAgC;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAuB,WAAvB;;AAAyB;;AAAI;;AAE7D;;AAAoC;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAuB,WAAvB;;AAAyB;;AAAI;;AACjE;;AAAoC;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAuB,WAAvB;;AAAyB;;AAAI;;AACjE;;AAAmC;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAuB,WAAvB;;AAAyB;;AAAa;;AAC3E;;AACF;;AACA;;AACE;;AACE;;;;AAUA;;AAAkC;;AAAiB;;AAEnD;;AACA;;;;AAmCF;;AAEA;;AAEF;;AACF;;;;AAnEM;;AAAA,8KAA+C,QAA/C,EAA+C,KAA/C;;AADA;;AAoBE;;AAAA;;AAQG;;AAAA;;;;;;;;;;sEDnBEA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT/F,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVzB;;AACE;;AAAI;;AAAc;;AAElB;;AAA2B;AAAA;;AAAA;;AAAA,oCAAoB,OAApB;AAA2B,SAA3B;;AACzB;;AACF;;AACF;;;;;;;;AAEA;;AACE;;AAAI;;AAAO;;AACX;;AAAwC;AAAA;;AAAA;;AAAA,oCAAoB,QAApB;AAA4B,SAA5B;;AACtC;;AACF;;AACF;;;;;;;;AAEA;;AACE;;AAAI;;AAAc;;AAClB;;AAAgC;AAAA;;AAAA;;AAAA,oCAAoB,OAApB;AAA2B,SAA3B;;AAA8B;;AAAI;;AACpE;;;;;;AAYI;;AACE;;AACF;;;;;;AAYA;;AACE;;AACF;;;;;;AAXF;;AACE;;AAQA;;AAGF;;;;;;AAZgB;;AASH;;AAAA;;;;;;AAiBX;;AACE;;AACF;;;;;;AAdF;;AAIE;;AAQA;;AAGF;;;;;;AAdE;;AAWW;;AAAA;;;;;;AAOb;;AAME;;AACF;;;;;;AAHE;;;;;;AAKF;;AAOE;;AACF;;;;;;AAHE;;;;;;;;AAMJ;;AAGE;AAAA;;AAAA;;AAAA,oCAAoB,OAApB;AAA2B,SAA3B;;AAEA;;AACF;;;;QClFW+F,mB;;;AAQX,mCAAoBC,MAApB,EAAqDC,EAArD,EAAsE;AAAA;;AAAlD,aAAAD,MAAA,GAAAA,MAAA;AAAiC,aAAAC,EAAA,GAAAA,EAAA;AALrD,aAAAC,IAAA,GAAqC,QAArC;AACA,aAAAC,OAAA,GAAU,KAAV;AAIwE;;;;mCAE7D;AACT,eAAKC,IAAL,GAAY,KAAKH,EAAL,CAAQI,KAAR,CAAc;AACxBC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWD,KAAjC,CAAL,CADiB;AAExBE,oBAAQ,EAAE,CACR,EADQ,EAER,CAAC,0DAAWC,SAAX,CAAqB,CAArB,CAAD,EAA0B,0DAAWF,QAArC,CAFQ,CAFc;AAMxBG,2BAAe,EAAE,CAAC,EAAD,EAAK,EAAL;AANO,WAAd,CAAZ;AAQD;;;mCAEUzD,G,EAAK;AACd,eAAKiD,IAAL,GAAYjD,GAAZ;AACD;;;mCAiCgB;;;;;;;;;AACf,yBAAKkD,OAAL,GAAe,IAAf;AAEMG,yB,GAAQ,KAAKA,KAAL,CAAWvF,K;AACnByF,4B,GAAW,KAAKA,QAAL,CAAczF,K;;;yBAGzB,KAAK4F,O;;;;;;AACP,2BAAM,KAAKX,MAAL,CAAYY,IAAZ,CAAiBC,0BAAjB,CAA4CP,KAA5C,EAAmDE,QAAnD,CAAN;;;yBAEE,KAAKM,Q;;;;;;AACP,2BAAM,KAAKd,MAAL,CAAYY,IAAZ,CAAiBG,8BAAjB,CAAgDT,KAAhD,EAAuDE,QAAvD,CAAN;;;yBAEE,KAAKQ,e;;;;;;AACP,2BAAM,KAAKhB,MAAL,CAAYY,IAAZ,CAAiBK,sBAAjB,CAAwCX,KAAxC,CAAN;;;AACA,yBAAKY,aAAL,GAAqB,kBAArB;;;;;;;;;AAGF,yBAAKA,aAAL;;;AAGF,yBAAKf,OAAL,GAAe,KAAf;;;;;;;;;AACD;;;4BArDa;AACZ,iBAAO,KAAKD,IAAL,KAAc,OAArB;AACD;;;4BAEc;AACb,iBAAO,KAAKA,IAAL,KAAc,QAArB;AACD;;;4BAEqB;AACpB,iBAAO,KAAKA,IAAL,KAAc,OAArB;AACD;;;4BAEW;AACV,iBAAO,KAAKE,IAAL,CAAUtF,GAAV,CAAc,OAAd,CAAP;AACD;;;4BACc;AACb,iBAAO,KAAKsF,IAAL,CAAUtF,GAAV,CAAc,UAAd,CAAP;AACD;;;4BAEqB;AACpB,iBAAO,KAAKsF,IAAL,CAAUtF,GAAV,CAAc,iBAAd,CAAP;AACD;;;4BAEuB;AACtB,cAAI,KAAKoF,IAAL,KAAc,QAAlB,EAA4B;AAC1B,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAKM,QAAL,CAAczF,KAAd,KAAwB,KAAK2F,eAAL,CAAqB3F,KAApD;AACD;AACF;;;;;;;uBAtDUgF,mB,EAAmB,mI,EAAA,2H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,2+B;AAAA;AAAA;ADbhC;;AACE;;AAQA;;AAOA;;AAKA;;AAAyB;AAAA,mBAAY,IAAAoB,QAAA,EAAZ;AAAsB,WAAtB;;AACvB;;AACE;;AAQA;;AAGF;;AAEA;;AAcA;;AAiBA;;AAAgC;;AAAmB;;AAEnD;;AASA;;AASF;;AAEA;;AAOF;;;;AA/FO;;AAAA;;AAQA;;AAAA;;AAOA;;AAAA;;AAKC;;AAAA;;AACY;;AAAA;;AASH;;AAAA;;AAKqC;;AAAA;;AAgBhD;;AAAA;;AAe8B;;AAAA;;AAG9B;;AAAA;;AASA;;AAAA;;AAYF;;AAAA;;;;;;;;;sEC9ESpB,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTjG,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoH,qB;;;AACX,qCAAoBpB,MAApB,EAA6C;AAAA;;AAAzB,aAAAA,MAAA,GAAAA,MAAA;AAA2B;;;;kCAGrC;AACR,eAAKA,MAAL,CAAYY,IAAZ,CAAiBS,eAAjB,CAAiC,IAAI,kDAAcC,kBAAlB,EAAjC;AACD;;;;;;;uBANUF,qB,EAAqB,mI;AAAA,K;;;YAArBA,qB;AAAqB,8C;AAAA;AAAA;;;;;;;;;;sEAArBA,qB,EAAqB;cAHjC,uDAGiC;eAHvB;AACTtH,kBAAQ,EAAE;AADD,S;AAGuB,Q;;;;;;gBAG/B,0D;iBAAa,O;;;;;;;;;;;;;;;;;;;;ACVhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCE;;AACE;;AAAI;;AAAK;;AAET;;AACE;;AAAsC;;AACxC;;AAEA;;AAAI;;AAAE;;AAEN;;AACF;;;;;;;;AAEA;;AACE;;AACE;;AAAa;;AAAQ;;AAAgB;;AACvC;;AAEA;;AAA2B;AAAA;;AAAA;;AAAA,iBAAS,QAAAkG,MAAA,eAAT;AAA8B,SAA9B;;AAAgC;;AAAM;;AACnE;;;;;;AAJyB;;AAAA;;;;QDPduB,kB,GACX,4BAAmBvB,MAAnB,EAA4C;AAAA;;AAAzB,WAAAA,MAAA,GAAAA,MAAA;AAA4B,K;;;uBADpCuB,kB,EAAkB,mI;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,c;AAAA,a;AAAA,wM;AAAA;AAAA;ACR/B;;AACE;;;;AAYA;;;;AAOF;;;;AAnBO;;AAAA;;AAYA;;AAAA;;;;;;;;;;sEDLMA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTzH,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AER/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMb,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,CAAvB;;QAQamI,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBAHnB,CAAC,6DAAaC,QAAb,CAAsBtI,MAAtB,CAAD,CAGmB,EAFlB,4DAEkB;;;;0HAAjBqI,iB,EAAiB;AAAA;AAAA,kBAFlB,4DAEkB;AAAA,O;AAFN,K;;;;;sEAEXA,iB,EAAiB;cAJ7B,sDAI6B;eAJpB;AACR5H,iBAAO,EAAE,CAAC,6DAAa6H,QAAb,CAAsBtI,MAAtB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIoB,Q;;;;;;;;;;;;;;;;;;ACb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqBayI,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAPZ,CACP,4DADO,EAEP,kEAFO,EAGP,sEAHO,EAIP,kEAJO,CAOY;;;;0HAAVA,U,EAAU;AAAA,uBATN,8EASM,EATiB,sFASjB,EATsC,mFAStC;AATwD,kBAG3E,4DAH2E,EAI3E,kEAJ2E,EAK3E,sEAL2E,EAM3E,kEAN2E,CASxD;AAHA,kBALX,8EAKW;AAGA,O;AARU,K;;;;;sEAQpBA,U,EAAU;cAVtB,sDAUsB;eAVb;AACRrH,sBAAY,EAAE,CAAC,8EAAD,EAAwB,sFAAxB,EAA6C,mFAA7C,CADN;AAERpB,iBAAO,EAAE,CAAC,8EAAD,CAFD;AAGRW,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,sEAHO,EAIP,kEAJO;AAHD,S;AAUa,Q;;;;;;;;;;;;;;;;;;ACrBvB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM+H,WAAW,GAAG;AACzBvH,gBAAU,EAAE,KADa;AAEzBqB,mBAAa,EAAE,QAFU;AAGzBmG,cAAQ,EAAG;AAHc,KAApB;AAOP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACjBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYxH,UAAhB,EAA4B;AAC1B;AACD;;AAEDyH,YAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,kFAAyBC,eAAzB,CAAyC,yDAAzC,EACCC,KADD,CACO,UAAAC,GAAG;AAAA,eAAI7F,OAAO,CAACD,KAAR,CAAc8F,GAAd,CAAJ;AAAA,OADV;AAED,KAHD","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { AuthGuard } from './user/auth.guard';\r\nimport { HelpPageComponent } from './pages/help-page/help-page.component';\r\nimport { DemoPageComponent } from './pages/demo-page/demo-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomePageComponent },\r\n  { path: 'demo', component: DemoPageComponent },\r\n  { path: 'help', component: HelpPageComponent },\r\n  // {\r\n  //   path: 'login',\r\n  //   loadChildren: () => import('./user/user.module').then(m => m.UserModule)\r\n  // },\r\n  {\r\n    path: 'tts',\r\n    loadChildren: () =>\r\n      import('./tts/tts.module').then(m => m.TtsModule),\r\n    // canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled'\r\n})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  constructor() {}\r\n}\r\n","<app-shell>\r\n    <router-outlet></router-outlet>\r\n    <app-feedback></app-feedback>\r\n</app-shell>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n// App Modules\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { UserModule } from './user/user.module';\r\n\r\n// Firebase imports\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SnackService } from './services/snack.service';\r\nimport { AuthService } from './services/auth.service';\r\nimport { FeedbackModule } from './feedback/feedback.module';\r\nimport { BreakpointService } from './services/breakpoint.service';\r\nimport { DialogService } from './services/dialog.service';\r\nimport { HelpPageComponent } from './pages/help-page/help-page.component';\r\nimport { DemoPageComponent } from './pages/demo-page/demo-page.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomePageComponent,\r\n    HelpPageComponent,\r\n    DemoPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    UserModule,\r\n    // AngularFireModule.initializeApp(environment.firebase),\r\n    // AngularFirestoreModule,\r\n    // AngularFireAuthModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\r\n    FeedbackModule,\r\n  ],\r\n  providers: [SnackService,\r\n    AuthService,\r\n    DialogService,\r\n    BreakpointService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nexport interface Feedback {\n  goal?: string;\n  features?: string;\n  other?: string;\n  mail?: string;\n}\n\n@Component({\n  selector: 'app-feedback-dialog',\n  templateUrl: './feedback-dialog.component.html',\n  styleUrls: ['./feedback-dialog.component.scss']\n})\nexport class FeedbackDialogComponent implements OnInit {\n  formGroup: FormGroup;\n\n  constructor() {\n    this.formGroup = new FormGroup({\n      goal: new FormControl(''),\n      features: new FormControl(''),\n      other: new FormControl(''),\n      mail: new FormControl(''),\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  formGroupToFeedback(formGroup: FormGroup): Feedback {\n    return {\n      goal: formGroup.get('goal').value || '',\n      features: formGroup.get('features').value || '',\n      other: formGroup.get('other').value || '',\n    }\n  }\n\n}\n","<header class=\"feedback-header\">\n  <h3>Feedback survey</h3>\n  <a class=\"close-button\" [mat-dialog-close]=\"\">X</a>\n</header>\n<div mat-dialog-content>\n  <form class=\"survey\" [formGroup]=\"formGroup\">\n    <div class=\"question-row\">\n      <label for=\"goal\">\n        What is your main goal using this service ?\n      </label>\n      <textarea id=\"goal\" matInput formControlName=\"goal\"></textarea>\n    </div>\n    <div class=\"question-row\">\n      <label for=\"features\">What features would you like to see introduced in the future ?</label>\n      <textarea id=\"features\" matInput formControlName=\"features\"></textarea>\n    </div>\n    <div class=\"question-row\">\n      <label for=\"other\">Is there anything else you would like to add ? (question, remark, issues...)</label>\n      <textarea id=\"other\" matInput formControlName=\"other\"></textarea>\n    </div>\n    <div class=\"question-row\">\n      <label for=\"mail\">You can leave your mail if you want us to get back to you.</label>\n      <input id=\"mail\" matInput formControlName=\"mail\"/>\n    </div>\n  </form>\n\n</div>\n<div mat-dialog-actions>\n\n  <button class=\"submit-survey\" mat-raised-button [mat-dialog-close]=\"formGroupToFeedback(formGroup)\">Submit</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { FeedbackDialogComponent } from './feedback-dialog/feedback-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SharedModule } from '../shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [FeedbackComponent, FeedbackDialogComponent],\n  exports: [\n    FeedbackComponent\n  ],\n  imports: [\n    CommonModule,\n    MatDialogModule,\n    SharedModule,\n    ReactiveFormsModule\n  ]\n})\nexport class FeedbackModule { }\n","import { Injectable } from '@angular/core';\nimport { Feedback } from './feedback-dialog/feedback-dialog.component';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  sendFeedback(result: Feedback): Observable<any> {\n    const data = {\n      files: {\n        'goal.txt': {\n          content: result.goal\n        },\n        'features.txt': {\n          content: result.features\n        },\n        'other.txt': {\n          content: result.other\n        },\n        'mail.txt': {\n          content: result.mail\n        },\n\n      },\n      description: 'feedback',\n    }\n    return this\n      .httpClient\n      .post(\n      'https://api.github.com/gists?access_token=' + environment.feedbackToken,\n        data\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Feedback, FeedbackDialogComponent } from '../feedback-dialog/feedback-dialog.component';\nimport { SnackService } from '../../services/snack.service';\nimport { FeedbackService } from '../feedback.service';\nimport { DialogService } from '../../services/dialog.service';\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.scss']\n})\nexport class FeedbackComponent implements OnInit {\n\n  constructor(\n    private dialogService: DialogService,\n    private feedbackService: FeedbackService,\n    private snackService: SnackService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  feedbackClicked() {\n    this.dialogService.openDialog(FeedbackDialogComponent, {\n    }).subscribe((result: Feedback) => {\n      if (result) {\n        this.feedbackService.sendFeedback(result).subscribe(() => {\n          this.snackService.displayMessage('Thank you for your feedback !');\n        }, error => {\n          console.log(error);\n          this.snackService.displayMessage('Sorry, something went wrong sending your feedback.');\n        });\n      }\n    });\n  }\n}\n","<button (click)=\"feedbackClicked()\">Feedback</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo-page',\n  templateUrl: './demo-page.component.html',\n  styleUrls: ['./demo-page.component.scss']\n})\nexport class DemoPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<article class=\"simple-article\">\n  <section class=\"simple-section\">\n    Coming soon !\n  </section>\n</article>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-page',\n  templateUrl: './help-page.component.html',\n  styleUrls: ['./help-page.component.scss']\n})\nexport class HelpPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<article class=\"simple-article\">\n  <section class=\"simple-section\">\n    <h2>How to get an API key ?</h2>\n    <ol>\n      <li>Create or select a Google Cloud project from <a href=\"https://console.cloud.google.com/cloud-resource-manager\">here</a></li>\n      <li>Enable billing for the project from <a href=\"https://console.cloud.google.com/billing/linkedaccount\">here</a>. (Note: even with billing enabled, you won't be charged unless you go over the <a href=\"https://cloud.google.com/text-to-speech/pricing\">free monthly quota</a>)</li>\n      <li>Enable Text-to-Speech <a href=\"https://console.cloud.google.com/flows/enableapi?apiid=texttospeech.googleapis.com\">here</a>.</li>\n      <li>Go to the <a href=\"https://console.cloud.google.com/apis/credentials\">Credentials page</a>, click on <b>Create credentials</b>, then <b>API key</b>.</li>\n      <li>Copy and paste the API Key into the <a [routerLink]=\"'/tts'\"> Text-to-Speech Interface</a> and click save.</li> (Note: the API key is saved in your browser, we do not save it on our end)\n    </ol>\n    <h2>\n      Pricing\n    </h2>\n    <p>\n      This website is currently free.\n      You won't be charged by Google Cloud's Text-to-Speech as long as you don't go over the free quota.\n      Google's service offers 1 million characters per month free of charge (<a href=\"https://cloud.google.com/text-to-speech/pricing\">see details here</a>)\n      After that, the pricing is $16.00USD per 1 million characters for WaveNet TTS, and $4.00US for non-WaveNet TTS.\n    </p>\n\n    <h2>\n      Privacy\n    </h2>\n    <p>\n      Nothing is stored on our end, except for the feedback you might send us.\n      Everything else (API key, generated sounds, text) is stored within your device's browser.\n    </p>\n  </section>\n</article>\n\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent {}\r\n","\r\n<header>\r\n    <h1>Text2Speech AI</h1>\r\n    <p>\r\n        Access state-of-the-art Text-To-Speech synthesis through an easy-to-use interface !\r\n    </p>\r\n</header>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthService {\n\n  public user: any;\n  private _loaded = new BehaviorSubject<boolean>(false); // Initial load\n\n  waitForLoad(): Promise<boolean> {\n    return this._loaded.pipe(\n      filter(val => val),\n      take(1),\n    ).toPromise();\n  }\n\n  constructor(private af: AngularFireAuth) {\n    this.af.user.subscribe(user => {\n      if (user) {\n        this.setUser(user)\n      }\n      this._loaded.next(true);\n    })\n  }\n  setUser(user) { this.user = user; }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreakpointService {\n  isExtraSmall: Observable<BreakpointState> = this.breakpointObserver.observe(\n    Breakpoints.XSmall\n  );\n\n  get isMobile() {\n    return this.breakpointObserver.isMatched('(max-width: 767px)');\n  }\n\n  constructor(private readonly breakpointObserver: BreakpointObserver) { }\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {ComponentType} from '@angular/cdk/overlay';\nimport {Observable} from 'rxjs';\nimport { BreakpointService } from './breakpoint.service';\n\n@Injectable()\nexport class DialogService {\n  isOpened = false;\n\n  constructor(\n    private readonly breakpointService: BreakpointService,\n    public dialog: MatDialog,\n  ) { }\n\n\n  openDialog(component: ComponentType<any> | TemplateRef<any>, config?: MatDialogConfig): Observable<any> {\n    if (this.isOpened) {\n      return;\n    }\n    this.isOpened = true;\n\n    let dialogConfig: MatDialogConfig = {\n      width: 'calc(100% - 50px)',\n      maxWidth: '100vw',\n      panelClass: 'no-border-radius',\n    }\n    if (config) {\n      dialogConfig = {\n        ...dialogConfig,\n        ...config,\n      };\n    }\n    const d = this.dialog.open(component, dialogConfig);\n\n    const smallDialogSubscription = this.breakpointService.isExtraSmall.subscribe(size => {\n      if (size.matches) {\n        d.updateSize('100vw', '100vh');\n      } else {\n        d.updateSize('calc(100% - 50px)', '');\n      }\n    });\n\n    const afterClosed = d.afterClosed();\n    afterClosed.subscribe(() => {\n      this.isOpened = false;\n      smallDialogSubscription.unsubscribe();\n    });\n    return afterClosed;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackService {\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private router: Router\r\n  ) {}\r\n\r\n  authError() {\r\n    this.snackBar.open('You must be logged in!', 'OK', {\r\n      duration: 5000\r\n    });\r\n\r\n    return this.snackBar._openedSnackBarRef\r\n      .onAction()\r\n      .pipe(tap(_ => this.router.navigate(['/login'])))\r\n      .subscribe();\r\n  }\r\n\r\n  public displayError(message: string) {\r\n    this.snackBar.open(message, 'OK', {\r\n      panelClass: 'error-bar',\r\n      duration: 5000\r\n    });\r\n  }\r\n\r\n  public displayMessage(message: string, options?: any) {\r\n    this.snackBar.open(message, 'OK', {\r\n      duration: (options && options.duration) || 5000\r\n    });\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-button',\r\n  templateUrl: './delete-button.component.html',\r\n  styleUrls: ['./delete-button.component.scss']\r\n})\r\nexport class DeleteButtonComponent {\r\n  canDelete: boolean;\r\n\r\n  @Output() delete = new EventEmitter<boolean>();\r\n\r\n  cancel() {\r\n    this.canDelete = false;\r\n  }\r\n\r\n  prepareForDelete() {\r\n    this.canDelete = true;\r\n  }\r\n\r\n  deleteBoard() {\r\n    this.delete.emit(true);\r\n    this.canDelete = false;\r\n  }\r\n\r\n\r\n}\r\n","<button mat-button color=\"warn\" (click)=\"canDelete ? deleteBoard() : prepareForDelete()\">\r\n    <mat-icon>delete</mat-icon>\r\n    <span *ngIf=\"canDelete\">confirm</span> \r\n</button>\r\n\r\n<button *ngIf=\"canDelete\" mat-button (click)=\"cancel()\">\r\n    Cancel\r\n</button>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ShellComponent } from './shell/shell.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DeleteButtonComponent } from './delete-button/delete-button.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\nconst components = [\r\n  ShellComponent, DeleteButtonComponent\r\n];\r\n\r\nconst modules = [\r\n  CommonModule,\r\n  RouterModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  LayoutModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSnackBarModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...components\r\n  ],\r\n  imports: [\r\n    ...modules,\r\n  ],\r\n  exports: [\r\n    ...components,\r\n    ...modules\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n  selector: 'app-shell',\r\n  templateUrl: './shell.component.html',\r\n  styleUrls: ['./shell.component.scss']\r\n})\r\nexport class ShellComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe([Breakpoints.XSmall])\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    // public afAuth: AngularFireAuth\r\n  ) {}\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"false\">\r\n    <mat-toolbar>Menu</mat-toolbar>\r\n    <mat-nav-list>\r\n\r\n      <a mat-list-item routerLink=\"/\" (click)=\"drawer.close()\">Home</a>\r\n<!--      <a mat-list-item routerLink=\"/login\" (click)=\"drawer.close()\">Login</a>-->\r\n      <a mat-list-item routerLink=\"/demo\" (click)=\"drawer.close()\">Demo</a>\r\n      <a mat-list-item routerLink=\"/help\" (click)=\"drawer.close()\">Help</a>\r\n      <a mat-list-item routerLink=\"/tts\" (click)=\"drawer.close()\">TTS interface</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n\r\n\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span class=\"logo\" routerLink=\"/\">💬 Text2Speech AI</span>\r\n\r\n      <span class=\"fill-space\"></span>\r\n      <div *ngIf=\"!(isHandset$ | async)\">\r\n        <a mat-button routerLink=\"/demo\">🔊 Demo</a>\r\n        <a mat-button routerLink=\"/tts\">📃 Text-to-Speech Interface</a>\r\n        <a mat-button routerLink=\"/help\">❔ Help</a>\r\n\r\n<!--        <a mat-button routerLink=\"/login\" *ngIf=\"!(afAuth.authState | async)\">🔑 Login</a>-->\r\n<!--        <a mat-button routerLink=\"/login\" *ngIf=\"afAuth.authState | async as user\" >-->\r\n<!--          ⚙ Account-->\r\n<!--        </a>-->\r\n\r\n      </div>\r\n\r\n<!--      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">-->\r\n<!--        <mat-icon>more_vert</mat-icon>-->\r\n<!--      </button>-->\r\n\r\n<!--      <mat-menu #menu=\"matMenu\">-->\r\n<!--        <a mat-menu-item href=\"https://fireship.page.link/slack\">-->\r\n<!--          <i>💬</i>-->\r\n<!--          <span>Chat on Slack</span>-->\r\n<!--        </a>-->\r\n<!--        <a mat-menu-item href=\"https://github.com/codediodeio/angular-firestarter\">-->\r\n<!--          <i>💾</i>-->\r\n<!--          <span>Code on Github</span>-->\r\n<!--        </a>-->\r\n<!--        <a mat-menu-item href=\"https://fireship.io/courses/angular\">-->\r\n<!--          <i>🔥</i>-->\r\n<!--          <span>Full Course on Fireship</span>-->\r\n<!--        </a>-->\r\n\r\n<!--        <a mat-menu-item href=\"https://www.youtube.com/channel/UCsBjURrPoezykLs9EqgamOA\">-->\r\n<!--          <i>📺</i>-->\r\n<!--          <span>Watch on the YouTube</span>-->\r\n<!--        </a>-->\r\n<!--      </mat-menu>-->\r\n    </mat-toolbar>\r\n\r\n    <ng-content></ng-content>\r\n\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","<mat-card>\r\n  <div *ngIf=\"isSignup\">\r\n    <h3>Create Account</h3>\r\n\r\n    <button mat-stroked-button (click)=\"changeType('login')\">\r\n      Returning user?\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"isLogin\">\r\n    <h3>Sign In</h3>\r\n    <button size=\"small\" mat-stroked-button (click)=\"changeType('signup')\">\r\n      New user?\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"isPasswordReset\">\r\n    <h3>Reset Password</h3>\r\n    <button size=\"small\" mat-button (click)=\"changeType('login')\">Back</button>\r\n  </div>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n    <mat-form-field [color]=\"email.valid && 'accent'\">\r\n      <input\r\n        matInput\r\n        formControlName=\"email\"\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        autocomplete=\"off\"\r\n      />\r\n\r\n      <mat-error *ngIf=\"email.invalid && email.dirty\">\r\n        You must enter a valid email address\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [color]=\"email.valid && 'accent'\" *ngIf=\"!isPasswordReset\">\r\n      <input\r\n        matInput\r\n        formControlName=\"password\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        autocomplete=\"off\"\r\n      />\r\n\r\n      <mat-error *ngIf=\"password.invalid && password.dirty\">\r\n        Password must be at least 6 characters long\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field\r\n      [color]=\"passwordDoesMatch ? 'accent' : 'warn'\"\r\n      *ngIf=\"isSignup\"\r\n    >\r\n      <input\r\n        matInput\r\n        formControlName=\"passwordConfirm\"\r\n        type=\"password\"\r\n        placeholder=\"Confirm password\"\r\n        autocomplete=\"off\"\r\n      />\r\n\r\n      <mat-error *ngIf=\"passwordConfirm.dirty && !passwordDoesMatch\">\r\n        Password does not match\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-error class=\"server-error\">{{ serverMessage }}</mat-error>\r\n\r\n    <button\r\n      *ngIf=\"isPasswordReset\"\r\n      mat-stroked-button\r\n      type=\"submit\"\r\n      [disabled]=\"loading\"\r\n    >\r\n      Send Reset Email\r\n    </button>\r\n\r\n    <button\r\n      *ngIf=\"!isPasswordReset\"\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      type=\"submit\"\r\n      [disabled]=\"form.invalid || !passwordDoesMatch || loading\"\r\n    >\r\n      Submit\r\n    </button>\r\n  </form>\r\n\r\n  <button\r\n    mat-button\r\n    *ngIf=\"isLogin && !isPasswordReset\"\r\n    (click)=\"changeType('reset')\"\r\n  >\r\n    Forgot password?\r\n  </button>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n  selector: 'app-email-login',\r\n  templateUrl: './email-login.component.html',\r\n  styleUrls: ['./email-login.component.scss']\r\n})\r\nexport class EmailLoginComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  type: 'login' | 'signup' | 'reset' = 'signup';\r\n  loading = false;\r\n\r\n  serverMessage: string;\r\n\r\n  constructor(private afAuth: AngularFireAuth, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: [\r\n        '',\r\n        [Validators.minLength(6), Validators.required]\r\n      ],\r\n      passwordConfirm: ['', []]\r\n    });\r\n  }\r\n\r\n  changeType(val) {\r\n    this.type = val;\r\n  }\r\n\r\n  get isLogin() {\r\n    return this.type === 'login';\r\n  }\r\n\r\n  get isSignup() {\r\n    return this.type === 'signup';\r\n  }\r\n\r\n  get isPasswordReset() {\r\n    return this.type === 'reset';\r\n  }\r\n\r\n  get email() {\r\n    return this.form.get('email');\r\n  }\r\n  get password() {\r\n    return this.form.get('password');\r\n  }\r\n\r\n  get passwordConfirm() {\r\n    return this.form.get('passwordConfirm');\r\n  }\r\n\r\n  get passwordDoesMatch() {\r\n    if (this.type !== 'signup') {\r\n      return true;\r\n    } else {\r\n      return this.password.value === this.passwordConfirm.value;\r\n    }\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.loading = true;\r\n\r\n    const email = this.email.value;\r\n    const password = this.password.value;\r\n\r\n    try {\r\n      if (this.isLogin) {\r\n        await this.afAuth.auth.signInWithEmailAndPassword(email, password);\r\n      }\r\n      if (this.isSignup) {\r\n        await this.afAuth.auth.createUserWithEmailAndPassword(email, password);\r\n      }\r\n      if (this.isPasswordReset) {\r\n        await this.afAuth.auth.sendPasswordResetEmail(email);\r\n        this.serverMessage = 'Check your email';\r\n      }\r\n    } catch (err) {\r\n      this.serverMessage = err;\r\n    }\r\n\r\n    this.loading = false;\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Directive({\r\n  selector: '[appGoogleSignin]'\r\n})\r\nexport class GoogleSigninDirective {\r\n  constructor(private afAuth: AngularFireAuth) {}\r\n\r\n  @HostListener('click')\r\n  onclick() {\r\n    this.afAuth.auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent {\r\n  constructor(public afAuth: AngularFireAuth) { }\r\n}\r\n","<main>\r\n  <div *ngIf=\"!(afAuth.authState | async)\">\r\n    <h1>Login</h1>\r\n\r\n    <button mat-raised-button appGoogleSignin>\r\n      <img src=\"/assets/google-logo.svg\" /> Login with Google\r\n    </button>\r\n\r\n    <h5>OR</h5>\r\n\r\n    <app-email-login></app-email-login>\r\n  </div>\r\n\r\n  <div *ngIf=\"afAuth.authState | async as user\" class=\"logout\">\r\n    <p>\r\n      Logged in as <strong>{{ user.email }}</strong>\r\n    </p>\r\n\r\n    <button mat-stroked-button (click)=\"afAuth.auth.signOut()\">Logout</button>\r\n  </div>\r\n</main>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPageComponent } from '../user/login-page/login-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { GoogleSigninDirective } from './google-signin.directive';\r\nimport { EmailLoginComponent } from './email-login/email-login.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [GoogleSigninDirective, EmailLoginComponent, LoginPageComponent],\r\n  exports: [GoogleSigninDirective],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    UserRoutingModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  feedbackToken: '123456',\r\n  firebase:  {\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n"]}